//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Inputs/InputActionsJogo.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputActionsJogo: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputActionsJogo()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputActionsJogo"",
    ""maps"": [
        {
            ""name"": ""Jogo"",
            ""id"": ""1abbb71f-f668-4498-ae17-5d90f1f5ec88"",
            ""actions"": [
                {
                    ""name"": ""Mover"",
                    ""type"": ""Button"",
                    ""id"": ""c83eec05-42c9-4ecf-ad50-8a36caf0f9d6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Girar"",
                    ""type"": ""Button"",
                    ""id"": ""aecd2376-7568-485e-824e-f1e88e43bd8e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""ASDW"",
                    ""id"": ""3b6c0698-f8b5-4e54-8210-03c70cef0057"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mover"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""2362d774-861b-4598-9993-1ec41029afc4"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mover"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""1d8b4fa8-69ce-4ab8-b0ea-b489079e4bea"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mover"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Setas"",
                    ""id"": ""59cb8b6c-ef09-4ac0-a067-83b0b8b248a6"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mover"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""639bf2cf-81ad-40bf-bddc-f64c304448ea"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mover"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""6cb93423-bc8e-491b-a81b-89a1a6c6a10e"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mover"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""ASDW"",
                    ""id"": ""cbf846f7-b288-4af5-b77f-dfb66db8c2ef"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Girar"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""b0394737-8341-4dee-ba6f-298eb7dd121d"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Girar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""cfe50443-7d74-41f5-8052-197b7a85399a"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Girar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Setas"",
                    ""id"": ""30ea8179-1f64-4e71-b96b-c5dfd78e687a"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Girar"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""efdb0e1f-6df1-4086-8fd4-b051bdf85ce1"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Girar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""2b2fad40-595f-445e-ac5e-1c6873627bb3"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Girar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Jogo
        m_Jogo = asset.FindActionMap("Jogo", throwIfNotFound: true);
        m_Jogo_Mover = m_Jogo.FindAction("Mover", throwIfNotFound: true);
        m_Jogo_Girar = m_Jogo.FindAction("Girar", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Jogo
    private readonly InputActionMap m_Jogo;
    private List<IJogoActions> m_JogoActionsCallbackInterfaces = new List<IJogoActions>();
    private readonly InputAction m_Jogo_Mover;
    private readonly InputAction m_Jogo_Girar;
    public struct JogoActions
    {
        private @InputActionsJogo m_Wrapper;
        public JogoActions(@InputActionsJogo wrapper) { m_Wrapper = wrapper; }
        public InputAction @Mover => m_Wrapper.m_Jogo_Mover;
        public InputAction @Girar => m_Wrapper.m_Jogo_Girar;
        public InputActionMap Get() { return m_Wrapper.m_Jogo; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(JogoActions set) { return set.Get(); }
        public void AddCallbacks(IJogoActions instance)
        {
            if (instance == null || m_Wrapper.m_JogoActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_JogoActionsCallbackInterfaces.Add(instance);
            @Mover.started += instance.OnMover;
            @Mover.performed += instance.OnMover;
            @Mover.canceled += instance.OnMover;
            @Girar.started += instance.OnGirar;
            @Girar.performed += instance.OnGirar;
            @Girar.canceled += instance.OnGirar;
        }

        private void UnregisterCallbacks(IJogoActions instance)
        {
            @Mover.started -= instance.OnMover;
            @Mover.performed -= instance.OnMover;
            @Mover.canceled -= instance.OnMover;
            @Girar.started -= instance.OnGirar;
            @Girar.performed -= instance.OnGirar;
            @Girar.canceled -= instance.OnGirar;
        }

        public void RemoveCallbacks(IJogoActions instance)
        {
            if (m_Wrapper.m_JogoActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IJogoActions instance)
        {
            foreach (var item in m_Wrapper.m_JogoActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_JogoActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public JogoActions @Jogo => new JogoActions(this);
    public interface IJogoActions
    {
        void OnMover(InputAction.CallbackContext context);
        void OnGirar(InputAction.CallbackContext context);
    }
}
